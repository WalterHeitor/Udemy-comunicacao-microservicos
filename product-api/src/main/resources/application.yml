server:
    port: ${PORT:8081}
spring:
    main:
        allow-bean-definitions-overriding: true
    application:
        name: product-api
    datasource:
        initialization-mode: always
        jpa:
            hibernate:
                ddl-auto: create-drop
            show-sql: true
        password: ${PRODUCT_DB_PASSWORD:product_password}
        url: jdbc:postgresql://localhost:5433/product_db
        username: ${PRODUCT_DB_USER:postgres}
    jpa:
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        defer-datasource-initialization: true
        hibernate:
            ddl-auto: create-drop # so developers can create the database test
        properties:
            hibernate:
                format_sql: true
        show-sql: true
    sql:
        init:
            mode: always
    rabbitmq:
        host: ${RABBIT_MQ_HOST:localhost}
        port: ${RABBIT_MQ_PORT:5672}
        username: ${RABBIT_MQ_USER:guest}
        password: ${RABBIT_MQ_PASSWORD:guest}

app-config:
    secrets:
        api-secret: ${API_SECRET:YXV0aC1hcGktc2VjcmV0LWRldi0xMjM0NTY=}

    rabbit:
        exchange:
            product: product.top
        routingKey:
            product-stock: product-stock.update.routingKey
            sales-confirmation: sales-confirmation.routingKey
        queue:
            product-stock: product-stock.queue
            sale-confirmation: sales-confirmation.queue


